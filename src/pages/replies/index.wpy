<style lang="less">
    .replyer-avatar {
        padding: 4px;
        border: 1px solid #ddd;
        border-radius: 4px;
        width: 50px;
        height: 50px;
    }
</style>

<template>
    <view class="page">
        <view class="page__bd">
            <view class="weui-panel weui-panel_access">
                <view class="weui-panel__bd">
                    <repeat for="{{replies}}" wx:key="id" index="index" item="reply">
                        <view class="weui-media-box weui-media-box_appmsg" hover-class="weui-cell_active">
                            <navigator class="weui-media-box__hd_in-appmsg"
                                       url="/pages/users/show?user_id={{reply.user_id}}">
                                <image class="weui-media-box__thumb replyer-avatar" src="{{reply.user.avatar}}"/>
                            </navigator>
                            <view class="weui-media-box__bd_in-appmsg">
                                <view class="weui-media-box__title">{{reply.user.name}}</view>
                                <view class="weui-media-box__desc">
                                    <rich-text nodes="{{reply.content}}" bindtap="tap"></rich-text>
                                </view>
                                <view class="weui-media-box__info">
                                    <view class="weui-media-box__info__meta">{{reply.created_at_diff}}</view>
                                </view>
                            </view>
                        </view>
                    </repeat>
                    <view class="weui-loadmore weui-loadmore_line" wx:if="{{noMoreData}}">
                        <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import api from '@/utils/api'
    import util from '@/utils/util'

    export default class Index extends wepy.page {
        config = {
            // 页面标题
            navigationBarTitleText: '回复列表',
            // 可以下拉刷新
            enablePullDownRefresh: true
        }

        data = {
            // 回复数据
            replies: [],
            // 是否有更多数据
            noMoreData: false,
            // 是否在加载中
            isLoading: false,
            // 当前页数
            page: 1,
            // 话题id
            topicId: 0
        }

        // 获取回复话题
        async getReplies(reset = false) {
            try {
                // 请求话题回复接口
                let repliesResponse = await api.request({
                    url: 'topics/' + this.topicId + '/replies',
                    data: {
                        page: this.page,
                        include: 'user'
                    }
                })

                if (repliesResponse.statusCode === 200) {
                    let replies = repliesResponse.data.data
                    // 格式化回复创建时间
                    replies.forEach(function (reply) {
                        reply.created_at_diff = util.diffForHumans(reply.created_at)
                    })
                    // 如果 reset 不是 true 则合并 this.replies 否则覆盖
                    this.replies = reset ? replies : this.replies.concat(replies)

                    let paginaation = repliesResponse.data.meta.pagination

                    if (paginaation.current_page === paginaation.total_pages) {
                        this.noMoreData = true;
                    }

                    this.$apply()
                }

                return repliesResponse
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                })
            }
        }

        async onLoad(options) {
            this.topicId = options.topic_id
            this.getReplies()
        }

        async onPullDownRefresh() {
            this.noMoreData = false
            this.page = 1
            await this.getReplies(true)
            wepy.stopPullDownRefresh()
        }

        async onReachBottom() {
            // 如果没有更多数据 或者在加载中 直接返回
            if (this.isLoading === true || this.noMoreData) {
                return
            }
            this.isLoading = true
            this.page = this.page + 1
            await this.getReplies()
            this.isLoading = false
            this.$apply()
        }
    }
</script>
