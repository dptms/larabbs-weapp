<style lang="less">
    /*分类*/
    .weui-flex {
        align-items: center;
    }

    .weui-cells {
        margin-top: 0;
        opacity: 0;
        transform: translateY(-50%);
        transition: .3s;
        &:before, &:after {
            display: none;
        }
        &_show {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .weui-cell, .weui-media-box {
        &:before {
            right: 15px;
        }
    }

    .category-list__item {
        background-color: #FFFFFF;
        border-radius: 2px;
        overflow: hidden;
        &:first-child {
            margin-top: 0;
        }
    }

    .category-list__item_selected {
        background-color: #eeeeee;
    }

    .category-list__img {
        width: 30px;
        height: 30px;
    }

    .category-list__item-hd {
        padding: 20px;
        transition: opacity .3s;
        &_show {
            opacity: .4;
        }
    }

    .category-list__item-bd {
        height: 0;
        overflow: hidden;
        &_show {
            height: auto;
        }
    }
</style>
<template>
    <view class="page">
        <view class="category-list__item">
            <view class="weui-flex category-list__item-hd" @tap="toggle">
                <view class="weui-flex__item page-title">{{ currentCategory.name || '话题' }}</view>
                <image class="category-list__img" src="/images/category.png"></image>
            </view>

            <view class="category-list__item-bd {{ categoryOpen ? 'category-list__item-bd_show' : '' }}">
                <view class="weui-cells {{ categoryOpen ? 'weui-cells_show' : '' }}">
                    <view @tap="changeCategory()"
                          class="weui-cell weui-cell_access {{ !currentCategory.id ? 'category-list__item_selected' : '' }}">
                        <view class="weui-cell__bd">话题</view>
                    </view>
                    <repeat for="{{ categories }}" item="category" key="id">
                        <view @tap="changeCategory({{ category.id }})"
                              class="weui-cell weui-cell_access {{ currentCategory.id == category.id ? 'category-list__item_selected' : '' }}">
                            <view class="weui-cell__bd">{{ category.name }}</view>
                        </view>
                    </repeat>
                </view>
            </view>
        </view>
        <view class="page__bd">
            <topiclist :syncData.sync="requestData"></topiclist>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import api from '@/utils/api'
    import topicList from '@/components/topicList'
    import unreadCount from '@/mixins/unreadCount'

    export default class TopicIndex extends wepy.page {
        config = {
            enablePullDownRefresh: true
        }

        data = {
            // 话题数据
            topics: [],
            // 分类信息
            categories: [],
            // 是否显示分类tab
            categoryOpen: false,
            // 当前分类
            currentCategory: {},
            requestData: {}
        }

        components = {
            topiclist: topicList
        }

        mixins = [unreadCount]

        computed = {
            currentCategoryId() {
                return this.currentCategory.id || 0
            }
        }

        async onLoad() {
            // 获取分类数据
            this.getCategories()
            // 调用组件的 reload 方法
            this.$invoke('topiclist', 'reload')
        }

        onShow() {
            this.$parent.checkRefreshPages(this.getCurrentPages().pop().route, () => {
                this.$invoke('topiclist', 'reload')
            })
        }

        async onPullDownRefresh() {
            // 调用组件的 reload 方法
            await this.$invoke('topiclist', 'reload')
            wepy.stopPullDownRefresh()
        }

        async onReachBottom() {
            // 调用组件的 reload 方法
            await this.$invoke('topiclist', 'loadMore')
        }

        async getCategories() {
            // 从缓存中获取分类数据
            let categories = wepy.getStorageSync('categories')

            if (!categories) {
                try {
                    let categoriesResponse = await api.request('categories')
                    if (categoriesResponse.statusCode === 200) {
                        categories = categoriesResponse.data.data
                        wepy.setStorageSync('categories', categories)
                    }
                } catch (err) {
                    console.log(err)
                    wepy.showModal({
                        title: '提示',
                        content: '服务器错误，请联系管理员'
                    })
                }
            }

            this.categories = categories
            this.$apply()
        }

        methods = {
            toggle() {
                this.categoryOpen = !this.categoryOpen
            },
            async changeCategory(id = 0) {
                // 找到选中的分类
                this.currentCategory = id ? this.categories.find(category => category.id === id) : {}
                // 点击以后关闭下拉列表
                this.categoryOpen = false
                this.$apply()
                this.requestData.category_id = this.currentCategoryId

                // 调用组件的 reload 方法
                this.$invoke('topiclist', 'reload')
            }
        }
    }
</script>
