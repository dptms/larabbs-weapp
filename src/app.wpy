<style lang="less">
    @import 'style/weui.less';

    .container {
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
    }

    page {
        background-color: #f8f8f8;
        font-size: 16px;
    }

    .page__hd {
        padding: 40px;
    }

    .page__bd {
        padding-bottom: 40px;
    }

    .page__bd_spacing {
        padding-left: 15px;
        padding-right: 15px;
    }

    .page__ft {
        padding-bottom: 10px;
        text-align: center;
    }

    .page__title {
        text-align: left;
        font-size: 20px;
        font-weight: 400;
    }

    .page__desc {
        margin-top: 5px;
        color: #888888;
        text-align: left;
        font-size: 14px;
    }
</style>

<script>
    import wepy from 'wepy'
    import 'wepy-async-function'
    import api from '@/utils/api'

    export default class extends wepy.app {
        config = {
            pages: [
                'pages/topics/index',
                'pages/topics/show',
                'pages/topics/userIndex',
                'pages/users/me',
                'pages/users/edit',
                'pages/users/show',
                'pages/auth/login',
                'pages/auth/register',
                'pages/replies/index',
                'pages/replies/userIndex',
                'pages/replies/create'
            ],
            window: {
                backgroundTextStyle: 'light',
                navigationBarBackgroundColor: '#fff',
                navigationBarTitleText: 'LaraBBS',
                navigationBarTextStyle: 'black'
            },
            tabBar: {
                list: [
                    {
                        pagePath: 'pages/topics/index',
                        text: '首页',
                        iconPath: 'images/index.png',
                        selectedIconPath: 'images/index_selected.png'
                    },
                    {
                        pagePath: 'pages/users/me',
                        text: '我的',
                        iconPath: 'images/user.png',
                        selectedIconPath: 'images/user_selected.png'
                    }
                ],
                color: '#707070',
                selectedColor: '#00b5ad'
            }
        };

        constructor() {
            super()
            this.use('requestfix')
            this.use('promisify')
        }

        onLaunch() {
            // 小程序启动，调用一次获取未读消息数
            this.updateUnreadCount()
            // 每隔 60s，调用一次获取未读消息数
            setInterval(() => {
                this.updateUnreadCount()
            }, 60000)
        }

        async updateUnreadCount() {
            // 如果未登录直接返回
            if (!this.checkLogin()) {
                return
            }
            try {
                // 请求消息统计接口
                let notificationResponse = await api.authRequest('user/notifications/stats', false)

                // 请求成功，复制全局变量 unreadCount
                if (notificationResponse.statusCode === 200) {
                    this.globalData.unreadCount = notificationResponse.data.unread_count
                }
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '系统错误，请联系管理员'
                })
            }
        }

        async getCurrentUser() {
            // 如果用户未登录
            if (!this.checkLogin()) {
                return null
            }

            // 从缓存中获取用户信息
            let user = wepy.getStorageSync('user')

            try {
                // 登录了但是缓存中没有，请求接口获取
                if (!user) {
                    let userResponse = await api.authRequest('user')
                    // 状态码为 200 表示请求成功
                    if (userResponse.statusCode === 200) {
                        user = userResponse.data
                        wepy.setStorageSync('user', user)
                    }
                }
            } catch (err) {
                console.log(err)
                wepy.showModal({
                    title: '提示',
                    content: '服务器错误，请联系管理员'
                });
            }

            return user
        }

        checkLogin() {
            return (wepy.getStorageSync('access_token') !== '')
        }

        globalData = {
            refreshPages: [],
            unreadCount: 0
        }

        checkRefreshPages(route, callback) {
            let refreshIndex = this.globalData.refreshPages.indexOf(route)
            if (refreshIndex === -1) {
                return
            }

            this.globalData.refreshPages.splice(refreshIndex, 1)
            callback && callback()
        }
    }
</script>
